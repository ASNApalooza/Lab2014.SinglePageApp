Using System
Using System.Collections.Generic
Using ASNA.Palooza.Lab2014.JsonLib

BegClass ContactController Access(*Public) Extends(Controller)

	DclFld serviceRegistry Type(Registry) Access(*Private)

	BegConstructor Access(*Public)
		serviceRegistry = *New Registry()
	EndConstructor

	// IndexAction
	// Path: /api/contacts
	// Method: GET
	BegFunc IndexAction Type(List(*Of Contact)) Access(*Public)

		DclFld contacts Type(List(*Of Contact))
		DclFld contactRepo Type(IContactRepository)

		contactRepo = serviceRegistry.GetContactRepository()
		contacts = contactRepo.FindContacts()

		LeaveSr contacts
	EndFunc

	// ShowAction
	// Path: /api/contacts/{id}
	// Method: GET
	BegFunc ShowAction Type(Contact) Access(*Public)
		DclSrParm id Type(*Integer4)

		DclFld contactEntity Type(Contact)
		DclFld contactRepo Type(IContactRepository)

		contactRepo = serviceRegistry.GetContactRepository()
		contactEntity = contactRepo.FindContact(id)

		LeaveSr contactEntity
	EndFunc

	// CreateAction
	// Path: /api/contacts
	// Method: POST
	BegFunc CreateAction Type(Contact) Access(*Public)

		DclFld contactEntity Type(Contact)
		DclFld contactRepo Type(IContactRepository)

		contactRepo = serviceRegistry.GetContactRepository()
		contactEntity = *New Contact()
		
		contactEntity.BindJsonData(*Base.GetRequestContent())

		contactRepo.AddContact(contactEntity)

		contactEntity = contactRepo.FindContactByEmail(contactEntity.email)

		// Set the Location header and 201 status code
		Http.Response.AddHeader("Location", "/contacts/" + contactEntity.id)
		Http.Response.StatusCode = 201

		LeaveSr contactEntity
	EndFunc

	// UpdateAction
	// Path: /api/contacts/{id}
	// Method: PUT
	BegFunc UpdateAction Type(Contact) Access(*Public)
		DclSrParm id Type(*Integer4)

		DclFld contactEntity Type(Contact)
		DclFld contactRepo Type(IContactRepository)

		contactRepo = serviceRegistry.GetContactRepository()
		contactEntity = contactRepo.FindContact(id)

		If (contactEntity <> *Nothing)
			contactEntity.BindJsonData(*Base.GetRequestContent())

			contactRepo.UpdateContact(contactEntity)
		EndIf

		LeaveSr contactEntity
	EndFunc

	// DeleteAction
	// Path: /api/contacts/{id}
	// Method: DELETE
	BegFunc DeleteAction Type(Contact) Access(*Public)
		DclSrParm id Type(*Integer4)

		DclFld contactEntity Type(Contact)
		DclFld contactRepo Type(IContactRepository)

		contactRepo = serviceRegistry.GetContactRepository()
		contactEntity = contactRepo.FindContact(id)

		If (contactEntity <> *Nothing)
			contactRepo.RemoveContact(contactEntity)
		EndIf

		LeaveSr contactEntity
	EndFunc

EndClass
